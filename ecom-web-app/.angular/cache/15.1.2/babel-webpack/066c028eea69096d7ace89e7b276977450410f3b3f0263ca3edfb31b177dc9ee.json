{"ast":null,"code":"\"use strict\";\n\n// import {Injectable} from \"@angular/core\";\n// import {KeycloakProfile} from \"keycloak-js\";\n// import {KeycloakEventType, KeycloakService} from \"keycloak-angular\";\n//\n// @Injectable({providedIn : \"root\"})\n// export class SecurityService {\n//   public profile? : KeycloakProfile;\n//   constructor (public kcService: KeycloakService) {\n//     this.init();\n//   }\n//   init(){\n//     this.kcService.keycloakEvents$.subscribe({\n//       next: (e) => {\n//         if (e.type == KeycloakEventType.OnAuthSuccess) {\n//           this.kcService.loadUserProfile().then(profile=>{\n//             this.profile=profile;\n//           });\n//         }\n//       }\n//     });\n//   }\n//   public hasRoleIn(roles:string[]):boolean{\n//     let userRoles = this.kcService.getUserRoles();\n//     for(let role of roles){\n//       if (userRoles.includes(role)) return true;\n//     } return false;\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["/Users/mac/Documents/Cours/Cours/3CI ISI/JEE - Youssefi/ecom-application/ecom-web-app/src/app/services/security.service.ts"],"sourcesContent":["// import {Injectable} from \"@angular/core\";\n// import {KeycloakProfile} from \"keycloak-js\";\n// import {KeycloakEventType, KeycloakService} from \"keycloak-angular\";\n//\n// @Injectable({providedIn : \"root\"})\n// export class SecurityService {\n//   public profile? : KeycloakProfile;\n//   constructor (public kcService: KeycloakService) {\n//     this.init();\n//   }\n//   init(){\n//     this.kcService.keycloakEvents$.subscribe({\n//       next: (e) => {\n//         if (e.type == KeycloakEventType.OnAuthSuccess) {\n//           this.kcService.loadUserProfile().then(profile=>{\n//             this.profile=profile;\n//           });\n//         }\n//       }\n//     });\n//   }\n//   public hasRoleIn(roles:string[]):boolean{\n//     let userRoles = this.kcService.getUserRoles();\n//     for(let role of roles){\n//       if (userRoles.includes(role)) return true;\n//     } return false;\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}