{"ast":null,"code":"import { KeycloakEventType } from \"keycloak-angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class SecurityService {\n  constructor(kcService) {\n    this.kcService = kcService;\n    this.init();\n  }\n  init() {\n    this.kcService.keycloakEvents$.subscribe({\n      next: e => {\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\n          this.kcService.loadUserProfile().then(profile => {\n            this.profile = profile;\n          });\n        }\n      }\n    });\n  }\n  hasRoleIn(roles) {\n    let userRoles = this.kcService.getUserRoles();\n    for (let role of roles) {\n      if (userRoles.includes(role)) return true;\n    }\n    return false;\n  }\n}\nSecurityService.ɵfac = function SecurityService_Factory(t) {\n  return new (t || SecurityService)(i0.ɵɵinject(i1.KeycloakService));\n};\nSecurityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SecurityService,\n  factory: SecurityService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAEA,SAAQA,iBAAiB,QAAwB,kBAAkB;;;AAGnE,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,SAA0B;IAA1B,cAAS,GAATA,SAAS;IAC3B,IAAI,CAACC,IAAI,EAAE;EACb;EACAA,IAAI;IACF,IAAI,CAACD,SAAS,CAACE,eAAe,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,CAAC,IAAI;QACV,IAAIA,CAAC,CAACC,IAAI,IAAIT,iBAAiB,CAACU,aAAa,EAAE;UAC7C,IAAI,CAACP,SAAS,CAACQ,eAAe,EAAE,CAACC,IAAI,CAACC,OAAO,IAAE;YAC7C,IAAI,CAACA,OAAO,GAACA,OAAO;UACtB,CAAC,CAAC;;MAEN;KACD,CAAC;EACJ;EACOC,SAAS,CAACC,KAAc;IAC7B,IAAIC,SAAS,GAAG,IAAI,CAACb,SAAS,CAACc,YAAY,EAAE;IAC7C,KAAI,IAAIC,IAAI,IAAIH,KAAK,EAAC;MACpB,IAAIC,SAAS,CAACG,QAAQ,CAACD,IAAI,CAAC,EAAE,OAAO,IAAI;;IACzC,OAAO,KAAK;EAChB;;AArBWjB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAmB,SAAfnB,eAAe;EAAAoB,YADF;AAAM","names":["KeycloakEventType","SecurityService","constructor","kcService","init","keycloakEvents$","subscribe","next","e","type","OnAuthSuccess","loadUserProfile","then","profile","hasRoleIn","roles","userRoles","getUserRoles","role","includes","factory","providedIn"],"sourceRoot":"","sources":["/Users/mac/Documents/Cours/Cours/3CI ISI/JEE - Youssefi/ecom-application/ecom-web-app/src/app/services/security.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {KeycloakProfile} from \"keycloak-js\";\nimport {KeycloakEventType, KeycloakService} from \"keycloak-angular\";\n\n@Injectable({providedIn : \"root\"})\nexport class SecurityService {\n  public profile? : KeycloakProfile;\n  constructor (public kcService: KeycloakService) {\n    this.init();\n  }\n  init(){\n    this.kcService.keycloakEvents$.subscribe({\n      next: (e) => {\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\n          this.kcService.loadUserProfile().then(profile=>{\n            this.profile=profile;\n          });\n        }\n      }\n    });\n  }\n  public hasRoleIn(roles:string[]):boolean{\n    let userRoles = this.kcService.getUserRoles();\n    for(let role of roles){\n      if (userRoles.includes(role)) return true;\n    } return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}